# #Resolve react_native_pods.rb with node to allow for hoisting
# require Pod::Executable.execute_command('node', ['-p',
#   'require.resolve(
#     "react-native/scripts/react_native_pods.rb",
#     {paths: [process.argv[1]]},
#   )', __dir__]).strip

# platform :ios, '13.4'
# prepare_react_native_project!
# use_modular_headers!


# pod 'Firebase', :modular_headers => true
# pod 'FirebaseCore', :modular_headers => true
# pod 'FirebaseFirestore', :modular_headers => true
# pod 'GoogleUtilities', :modular_headers => true
# pod 'FirebaseCoreExtension', :modular_headers => true
# pod 'rn-fetch-blob', :path => '../node_modules/rn-fetch-blob'

# # If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# # because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
# #
# # To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# # ```js
# # module.exports = {
# #   dependencies: {
# #     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# # ```
# flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

# linkage = ENV['USE_FRAMEWORKS']
# if linkage != nil
#   Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#   use_frameworks! :linkage => linkage.to_sym
# end

# target 'watchagotchamtechub' do
#   config = use_native_modules!


#   # Flags change depending on the env values.
#   flags = get_default_flags()

#   use_react_native!(
#     :path => config[:reactNativePath],
#     # Hermes is now enabled by default. Disable by setting this flag to false.
#     :hermes_enabled => flags[:hermes_enabled],
#     :fabric_enabled => flags[:fabric_enabled],
#     # Enables Flipper.
#     #
#     # Note that if you have use_frameworks! enabled, Flipper will not work and
#     # you should disable the next line.
#     :flipper_configuration => flipper_config,
#     # An absolute path to your application root.
#     :app_path => "#{Pod::Config.instance.installation_root}/.."
#   )

#   target 'watchagotchamtechubTests' do
#     inherit! :complete
#     # Pods for testing
#   end

#   post_install do |installer|
#     # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
#     react_native_post_install(
#       installer,
#       config[:reactNativePath],
#       :mac_catalyst_enabled => false
#     )
#     __apply_Xcode_12_5_M1_post_install_workaround(installer)
#   end
# end



platform :ios, '13.4'

require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

target 'watchagotchamtechub' do
  config = use_native_modules!

  # Enable static frameworks if necessary
  use_frameworks! :linkage => :static

  if ENV['RNV_SAMPLE_ENABLE_ADS']
    $RNVideoUseGoogleIMA = true
  end
  if ENV['RNV_SAMPLE_VIDEO_CACHING']
    $RNVideoUseVideoCaching = true
  end

  # Firebase dependencies with modular headers
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseFirestore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'
  pod 'react-native-video', path: '../node_modules/react-native-video'


  # React Native dependencies
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false,
    :fabric_enabled => false,
    # Disable Flipper
    :flipper_configuration => FlipperConfiguration.disabled,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'watchagotchamtechubTests' do
    inherit! :complete
  end

  post_install do |installer|
    react_native_post_install(installer)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings.delete "IPHONEOS_DEPLOYMENT_TARGET"
      end
      case target.name
      when 'RCT-Folly'
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.4'
        end
      end
     end
    end
end
